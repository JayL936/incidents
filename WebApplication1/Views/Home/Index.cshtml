@model IEnumerable<WebApplication1.Models.Incident>
@using Newtonsoft.Json

@{
    ViewBag.Title = "Home Page";
}

<script src="http://maps.googleapis.com/maps/api/js"></script>
<script type="text/javascript">

    var map;
    var counter = 0;
    var markers = [];
    var locations = [];
    var geocoder;
    var infowindow = new google.maps.InfoWindow;

    function initialize() {
        var mapProp = {
            center: new google.maps.LatLng(52.229491, 21.002137),
            zoom: 12,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        geocoder = new google.maps.Geocoder;

        @foreach (var item in Model) {
        <text>
        var lat = @item.Lat.ToString().Replace(",", ".");
        var long = @item.Long.ToString().Replace(",", ".");
            var latLng = new google.maps.LatLng(lat, long);
            placeMarker(latLng);
        </text>
        }

        google.maps.event.addListener(map, 'click', function (event) {
            placeMarker(event.latLng);
        });

    }

    function placeMarker(location) {

        counter++;

        var marker = new google.maps.Marker({
            position: location,
            map: map,
            id: counter
        });

        var address;

        markers.push(marker);

        var deleteButton = '<button id="deleteButton" data-id="' + counter + '">Delete</button>';
        var editButton = '<button id="editButton" data-id="' + counter + '">Edit</button>';

        reverseGeocoder(location, function(result, err){
            address = result;
            document.getElementById("address").innerHTML = address;
        });
    //    address = document.getElementById("address").innerText;  //dziala, wyswietla poprzedni adres

        var data = 'Latitude: ' + location.lat() +
            '<br>Longitude: ' + location.lng() +
            '<br>Counter: ' + counter +
            '<br>Address: ' + address +
            '<br>' + deleteButton +
            ' ' + editButton;

        google.maps.event.addListener(marker, 'click', function (event) {
            if(infowindow) infowindow.close();
            infowindow = new google.maps.InfoWindow({content: data})
            infowindow.open(map, marker);
            var buttonDelete = document.getElementById('deleteButton');
            var buttonEdit = document.getElementById('editButton');
            buttonDelete.onclick = function () {
                deleteMarker(marker.id);
            };
            buttonEdit.onclick = function() {
                editMarker(geocoder, map, event.latLng);
            }
        });

    }

    function deleteMarker(markerId) {

        for (var i = 0; i < markers.length; i++) {
            if (markers[i].id === markerId) {
                markers[i].setMap(null);
            }
        }
    }

    function reverseGeocoder(latLng, callback) {
        geocoder.geocode({'location': latLng}, function(results, status) {
            if (status === google.maps.GeocoderStatus.OK) {
                if (results[0]) {
                    callback(results[0].formatted_address, null);
                } else {     
                    callback(null, status);
                }
            } else {
                window.alert('Geocoder failed due to: ' + status);
            }
        });
    }

    function editMarker() {

    }

    function getDatatotheController(result) {
        var mode = result
        var parameters = { 'data': mode };

        $.ajax({
            type: "GET",
            url: '/Incidents/Create',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: parameters,
            success: successFunc,
            error: errorFunc
        });

        function successFunc(data) {
            alert(data);
        }

        function errorFunc() {
            alert(error);
        };
    }

    function displayLocation() {
        var marker = new google.maps.Marker({
            position: new google.maps.LatLng(data.Lat, data.Long),
            map: map
        });
    }

    google.maps.event.addDomListener(window, 'load', initialize);

</script>

@*<div class="jumbotron">


    </div>*@

<div id="googleMap" style="width:100%;height:700px;"></div>

<div id="address">

</div>

<div class="row">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Lat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Long)
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Lat)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Long)
                </td>
            </tr>
        }
    </table>
</div>