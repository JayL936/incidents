@model IEnumerable<WebApplication1.Models.Incident>
@using Newtonsoft.Json

@{
    ViewBag.Title = "Home Page";
}

<script src="http://maps.googleapis.com/maps/api/js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript" src="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/markerclusterer.js"></script>
<script type="text/javascript">

    var map;
    var counter = 0;
    var markers = [];
    var marker = new google.maps.Marker;
    var locations = [];
    var geocoder;
    var infowindow = new google.maps.InfoWindow;
    var markerCluster;
    var address;

    function initialize() {
        var mapProp = {
            center: new google.maps.LatLng(52.229491, 21.002137),
            zoom: 12,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        geocoder = new google.maps.Geocoder;

        @foreach (var item in Model) {
        <text>
        counter++;
        var lat = @item.Lat.ToString().Replace(",", ".");
        var long = @item.Long.ToString().Replace(",", ".");
            var latLng = new google.maps.LatLng(lat, long);
            placedbMarker(latLng);
        </text>
        }
        counter++;

        markerCluster = new MarkerClusterer(map, markers);
        google.maps.event.addListener(map, 'click', function (event) {
            placeMarker(event.latLng);
        });

    }

    function placedbMarker(location) {

        var dbmarker = new google.maps.Marker({
            position: location,
            map: map,
            id: counter
        });
        var address;

        markers.push(dbmarker);
        
        var deleteButton = '<button id="deleteButton" data-id="' + counter + '">Delete incident</button>';
        var editButton = '<button id="editButton" data-id="' + counter + '">Edit incident</button>';

        var data = 'Counter: ' + counter +
            '<br>' + deleteButton +
            ' ' + editButton;

        google.maps.event.addListener(dbmarker, 'click', function (event) {
            if(infowindow) infowindow.close();
            infowindow = new google.maps.InfoWindow({content: data})
            infowindow.open(map, dbmarker);
            reverseGeocoder(location, function(result, err){
                address = result;
                infowindow.setContent(result + "<br />" + data);
                document.getElementById("address").innerHTML = address;
            });
            var buttonDelete = document.getElementById('deleteButton');
            var buttonEdit = document.getElementById('editButton');
            buttonDelete.onclick = function () {
                deleteMarker(marker.id);
            };
            buttonEdit.onclick = function() {
                editdbMarker(geocoder, map, event.latLng);
            }
        });
    }

    function placeMarker(location) {

        if(marker) deleteMarker(marker.id);
        marker = new google.maps.Marker({
            position: location,
            map: map,
            id: counter
        });
        var address;

        markers.push(marker);
        markerCluster.clearMarkers();
        markerCluster = new MarkerClusterer(map, markers);
        var deleteButton = '<button id="deleteButton" data-id="' + counter + '">Delete marker</button>';
        var addButton = '<button id="addButton" data-id="' + counter + '">Add incident</button>';

        document.getElementById("lat").innerHTML = location.lat();
        document.getElementById("lng").innerHTML = location.lng();

        reverseGeocoder(location, function(result, err){
            address = result;
       //     infowindow.setContent(result + "<br />" + data);
            document.getElementById("address").innerHTML = address;
        });

        var data = 'Counter: ' + counter +
            '<br>What would you like to do?<br><br>' + deleteButton +
            ' ' + addButton;

        google.maps.event.addListener(marker, 'click', function (event) {
            if(infowindow) infowindow.close();
            infowindow = new google.maps.InfoWindow({content: data});
            infowindow.open(map, marker);
            //reverseGeocoder(location, function(result, err){
            //    address = result;
            //    infowindow = new google.maps.InfoWindow({content: result + "<br />" + data});//   infowindow.setContent(result + "<br />" + data);
            //    document.getElementById("address").innerHTML = address;
            //});
            var buttonDelete = document.getElementById('deleteButton');
            var buttonAdd = document.getElementById('addButton');
            buttonDelete.onclick = function () {
                deleteMarker(marker.id);
            };
            buttonAdd.onclick = function() {
                addMarker(event.latLng, address);
            }
        });
    }

    function deleteMarker(markerId) {

        for (var i = 0; i < markers.length; i++) {
            if (markers[i].id === markerId) {
                markers[i].setMap(null);
                markers.splice(i, 1);
            }
        }
    }

    function reverseGeocoder(latLng, callback) {
        geocoder.geocode({'location': latLng}, function(results, status) {
            if (status === google.maps.GeocoderStatus.OK) {
                if (results[0]) {
                    callback(results[0].formatted_address, null);
                } else {     
                    callback(null, status);
                }
            } else {
                window.alert('Geocoder failed due to: ' + status);
            }
        });
    }

    function postData(url, allData) {
        form = document.createElement('form');
        for(data in allData)
        {
            var input = document.createElement('input');
            input.type = 'text';
            input.name = data;
            input.value = allData[data].toString();
            form.appendChild(input);
        }
        form.method = 'post';
        form.action = url;
        form.submit();
    }

    function addMarker(location, fulladdress) {
        document.getElementById("address").innerText = address + " udalo sie!";
        document.getElementById("test").innerText = location + " udalo sie!";

        var data = JSON.stringify(fulladdress) + JSON.stringify(location)
        postData('/Incidents/Create', {JsonStr : data})

        //form = document.createElement('form');
        //for(data in allData)
        //{
        //    var input = document.createElement('input');
        //    input.type = 'text';
        //    input.name = data;
        //    input.value = allData[data].toString();
        //    form.appendChild(input);
        //}
        //form.method = 'post';
        //form.action = 'Incidents/CreateIncident';
        //form.submit();

        //$.ajax({
        //    type: "GET",
        //    url: "../Incidents/Create",
        //    dataType: "text",
        //    data:  {JsonStr : data}, 
        //    success: function(data){
        //        window.location.href = "../Incidents/Create"
        //    },
        //    error: function (xhr, ajaxOptions, thrownError) {
        //    alert(xhr.status);
        //    }
        //})
            
        //    .done(function () {
        //    window.location.href = "../Incidents/Create"
        //})
        
    }

    

    function getDatatotheController(result) {
        var mode = result
        var parameters = { 'data': mode };

        $.ajax({
            type: "GET",
            url: '/Incidents/CreateIncident',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: parameters,
            success: successFunc,
            error: errorFunc
        });

        function successFunc(data) {
            alert(data);
        }

        function errorFunc() {
            alert(error);
        };
    }

    function displayLocation() {
        var marker = new google.maps.Marker({
            position: new google.maps.LatLng(data.Lat, data.Long),
            map: map
        });
    }

    google.maps.event.addDomListener(window, 'load', initialize);

</script>

@*<div class="jumbotron">


    </div>*@

<div id="googleMap" style="width:100%;height:700px;"></div>

<div id="data">
    <br />

    <text>Address: </text><text id="address" >Choose incident.</text><br />
    <text id="date">Date: @DateTime.Now.Date.ToShortDateString()</text><br />
    <text id="time">Time: @DateTime.Now.ToShortTimeString()</text><br />
    <text id="lat" @*style="visibility: hidden"*@></text><br />
    <text id="lng" @*style="visibility: hidden"*@></text><br />
    <text id="test"></text>
    @Html.ActionLink("Add new incident", "Create", "Incidents")
</div>

<div class="row">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Lat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Long)
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Lat)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Long)
                </td>
            </tr>
        }
    </table>
</div>